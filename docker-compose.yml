version: '3.7'

services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    entrypoint: /entrypoint.sh
    volumes:
      - ./backend/:/usr/src/backend/
    ports:
      - 8005:8000
    env_file:
      - docker/env/.env
      - docker/.env
    depends_on:
      - db
      - redis
    restart: always
  db:
    image: postgres:12.0-alpine
    hostname: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - docker/env/db.env
  iot:
    build:
      context: .
      dockerfile: docker/iot/Dockerfile
    entrypoint: /entrypoint.sh
    volumes:
      - ./iot/:/usr/src/iot/
    env_file:
      - docker/iot/1.env
    depends_on:
      - backend
    restart: always
  iot2:
    build:
      context: .
      dockerfile: docker/iot/Dockerfile
    entrypoint: /entrypoint.sh
    volumes:
      - ./iot/:/usr/src/iot/
    env_file:
      - docker/iot/2.env
    depends_on:
      - backend
    restart: always
  iot3:
    build:
      context: .
      dockerfile: docker/iot/Dockerfile
    entrypoint: /entrypoint.sh
    volumes:
      - ./iot/:/usr/src/iot/
    env_file:
      - docker/iot/3.env
    depends_on:
      - backend
    restart: always
  redis:
    image: redis:6.0.1-alpine
    restart: always


volumes:
  postgres_data:
